//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

model User {
  id        BigInt    @id() @default(autoincrement())
  email     String    @unique()
  password  String
  name      String
  phone     String?
  address   String?
  birthday  DateTime? @db.Date()
  isEnabled Int?      @default(1)
  roleId    Int?      @default(2) @map("role_id")
  createdAt DateTime? @default(now()) @map("create_at")
  updatedAt DateTime? @updatedAt() @map("update_at")
  orders    Order[]
  carts     Cart[]
}

model Product {
  id               BigInt        @id() @default(autoincrement())
  name             String
  description      String?
  price            Decimal       @db.Decimal(19, 2)
  salePrice        Decimal?      @map("sale_price") @db.Decimal(19, 2)
  quantity         BigInt
  brand            String?
  type             String
  image            String?
  thumbnail        String?
  status           Int           @default(1)
  productView      BigInt        @default(0) @map("product_view")
  createdAt        DateTime      @default(now()) @map("created_at")
  updatedAt        DateTime?     @updatedAt() @map("updated_at")
  screenSize       String?       @map("screen_size")
  screenResolution String?       @map("screen_reslution")
  operatingSystem  String?       @map("operating_system")
  cpu              String?
  ram              String?
  storage          String?
  battery          String?
  weight           String?
  category         Category      @relation(fields: [type], references: [code])
  orderDetails     OrderDetail[]
  carts            Cart[]
}

model Category {
  id        Int       @id() @default(autoincrement())
  code      String    @unique()
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt()
  products  Product[]
}

model Cart {
  id        BigInt  @id() @default(autoincrement())
  userId    BigInt  @map("user_id")
  productId BigInt  @map("product_id")
  quantity  BigInt
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Order {
  id           BigInt        @id() @default(autoincrement())
  orderCode    String        @map("order_code")
  nameOrder    String        @map("name_order")
  phoneNumber  String        @map("phone_number")
  address      String
  notes        String?
  orderDate    DateTime      @map("order_date")
  deliveryDate DateTime?     @map("delivery_date")
  orderStatus  String        @map("order_status")
  totalAmount  Decimal       @map("total_amount") @db.Decimal(19, 2)
  userId       BigInt        @map("user_id")
  user         User          @relation(fields: [userId], references: [id])
  orderDetails OrderDetail[]
}

model OrderDetail {
  id        BigInt  @id() @default(autoincrement())
  orderId   BigInt  @map("order_id")
  productId BigInt  @map("product_id")
  quantity  BigInt
  unitPrice Decimal @map("unit_price") @db.Decimal(19, 2)
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id])
}
